var documenterSearchIndex = {"docs":
[{"location":"graphs/#Graphs","page":"Graphs","title":"Graphs","text":"","category":"section"},{"location":"graphs/","page":"Graphs","title":"Graphs","text":"Currently only the square lattice is implemented","category":"page"},{"location":"graphs/#Square-lattice","page":"Graphs","title":"Square lattice","text":"","category":"section"},{"location":"graphs/","page":"Graphs","title":"Graphs","text":"Create a square lattice with periodic or open boundary conditions:","category":"page"},{"location":"graphs/","page":"Graphs","title":"Graphs","text":"\tusing LatticeModels\n\tlato = SQLattice_open{Int}(5,5)\n\tlatp = SQLattice_periodic{Int}(5,5)","category":"page"},{"location":"graphs/","page":"Graphs","title":"Graphs","text":"Index with integers, CartesianIndex or with a Site object.  The latter knows about boundary conditions and lattice topology.","category":"page"},{"location":"graphs/","page":"Graphs","title":"Graphs","text":"\tlato .= reshape(1:length(lato),size(lato))\n\tlatp .= reshape(1:length(lato),size(latp))\n\tlato[1,1] + latp[1,1]\n\t\n\tI = SQLattice_site(lato,1,1)\n\tJ = SQLattice_site(latp,1,1)\n\tforeach_neighbour(I) do s println(s) end\n\tforeach_neighbour(J) do s println(s) end","category":"page"},{"location":"models/#Models","page":"Models","title":"Models","text":"","category":"section"},{"location":"models/#Ising-model","page":"Models","title":"Ising model","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"Ising model implemented over a generic graph.  For example, for the square lattice","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"using LatticeModels\n\nIS = Ising(SQLattice_periodic,20,20;T=2.7)\nprintln(\"Energy $(IS.E), magnetization $(IS.M)\")","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"The single-spin Metropolis and Wolff cluster Monte Carlo algorithms are implemented:","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"E,M = Metropolis!(IS,steps=100,save_interval=10)\nE,M = Wolff!(IS,steps=100,save_interval=10)","category":"page"},{"location":"models/#API","page":"Models","title":"API","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"Ising\nMetropolis!\nWolff!","category":"page"},{"location":"models/#LatticeModels.Ising","page":"Models","title":"LatticeModels.Ising","text":"Ising\n\nStruct to hold an Ising configuration plus parameters.\n\nAlter only through set_... functions to ensure consistency.\n\n\n\n\n\n","category":"type"},{"location":"models/#LatticeModels.Metropolis!","page":"Models","title":"LatticeModels.Metropolis!","text":"Metropolis!(IS::Ising;steps::Int = 1,save_interval::Int=0,conf_save_interval::Int=0)\n\nDo steps steps per spin of single-spin-flip Metropolis Monte Carlo for the Ising model IS.  conf_save_interval is not implemented. If save_interval>0 return a tuple (E, M) with energy and magnetization per spin, saved every save_interval steps.\n\n\n\n\n\n","category":"function"},{"location":"models/#LatticeModels.Wolff!","page":"Models","title":"LatticeModels.Wolff!","text":"Wolff!(IS::Ising;steps::Int = 1,save_interval::Int=0,conf_save_interval::Int=0)\n\nDo steps Monte Carlo steps for the Ising model IS using the Wolff cluster algorithm.  conf_save_interval is not implemented.  If save_interval>0 return a tuple (E, M) with energy and magnetization per spin, saved every save_interval steps.\n\n\n\n\n\n","category":"function"},{"location":"models/#Analytical-results","page":"Models","title":"Analytical results","text":"","category":"section"},{"location":"models/","page":"Models","title":"Models","text":"The following functions return exact values (in the thermodynamic limit), using Onsager's results.  These are taken from the IsingModels.jl package by  Jorge Fernandez-de-Cossio-Diaz.","category":"page"},{"location":"models/","page":"Models","title":"Models","text":"Ising_SQ_critical_temperature\nOnsager_magnetization\nOnsager_internal_energy\nOnsager_heat_capacity","category":"page"},{"location":"models/#LatticeModels.Ising_SQ_critical_temperature","page":"Models","title":"LatticeModels.Ising_SQ_critical_temperature","text":"Ising_SQ_critical_temperature\n\nCritical temperature of the Ising model on the (infinite) square lattice, obtained by Onsager.\n\n\n\n\n\n","category":"constant"},{"location":"models/#LatticeModels.Onsager_magnetization","page":"Models","title":"LatticeModels.Onsager_magnetization","text":"Onsager_magnetization(β)\n\nAnalytical magnetization (per spin) of the Ising model on the square lattice, obtained by Onsager in the thermodynamic limit.\n\n\n\n\n\n","category":"function"},{"location":"models/#LatticeModels.Onsager_internal_energy","page":"Models","title":"LatticeModels.Onsager_internal_energy","text":"Onsager_internal_energy(β)\n\nAnalytical internal energy (per spin) of the Ising model on the square lattice, obtained by Onsager in the thermodynamic limit.\n\n\n\n\n\n","category":"function"},{"location":"models/#LatticeModels.Onsager_heat_capacity","page":"Models","title":"LatticeModels.Onsager_heat_capacity","text":"Onsager_heat_capacity(β)\n\nSpecific heat capacity of the Ising model on the square lattice, as obtained by Onsager in the thermodynamic limit.\n\n\n\n\n\n","category":"function"},{"location":"models/#Gaussian-model","page":"Models","title":"Gaussian model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = LatticeModels","category":"page"},{"location":"#LatticeModels","page":"Home","title":"LatticeModels","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Package LatticeModels distributes code for Monte Carlo simulation of several statistical-mechanical lattice models.  The models are programmed to run on general graphs; graphs are implemented separately.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
